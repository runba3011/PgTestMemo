2024年6月28日20:00コードDR 指摘 トランプ当てゲーム、数字当てゲーム指摘

・スペースの位置がバラバラ。フォーマットすること。
・プロジェクトを圧縮して送付すること。
・メソッド分けを行うこと。
・警告は出ないようにしよう

・入力処理は基本的にScannerをインスタンス化して…といったところ
	入力チェックは行う…
	→既存のクラスを使うにしても入力チェックは行う。そこまで含めたものを作成する。
・無限ループは良くない…上限の回数は決めておこう
・条件は窓口が狭い方を条件とする。
	if文は基本正を最初に持ってくる
	コーディング規約に気を付けること
	◆ループを抜けるタイミング第１で考えると、場合によって条件が違う、というのが起きてしまう
		→条件を統一するために
・エラーがわかっているならその種類を特定すること
・ScannerはhasNext...で入力したものが特定の方であることを確認できる
・入力は基本try-catchを使う

◆関数名通りの動作になっていないことがよくある･･･注意
◆メソッドにはjavadocのコメントを使用しよう
・共通のものがあるとしても…不要なものは消しておこう
・メソッド名と実際の処理の内容が異なっている(特にBoolに注意)
・警告は表示されるようにしよう
・外で作った値をクラスの引数に…というよりコンストラクタ内で作成するほうが良い
	（クラスの中の値はクラスの中で極力作る）
・ネストクラスはプライベートにしておくとよい(ほかのところからは使用されないため)
◆アクセス修飾子を適切に使うようにしよう
◆配列を使うときには範囲外アクセスが起きないように注意


◆メソッドチェイニングの利点
	メリット：コンストラクタの引数の順番を確認しなくてよくなる+何を渡さないといけないかという制限をかけれる
	デメリット：多すぎると1行が長くなりすぎる
	
	→制約がいるならコンストラクタに全部

◆大きい順に撮りたい倍について
	ソートして最初から順番に…というように

◆列挙型は大文字スタートに

◆列挙型の中身はprivateにする。帰ることができてしまう

◆直さないといけないようなものはTODO とつけておくと波線がつく。活用する

◆基本はプリミティブ(int)型

◆文字列の結合は基本String.formatを使うこと
	+=は基本使わない。クラスのくせに不変
	とくにループを回して+=は特にしないこと。
	
◆staticが多いのは望ましくない
	メインメソッドは基本外部に切り出す。

◆リストの要素を全削除したいだけならclearでよい

◆リストが空の時の対応は必ず行うこと

◆フラグによって処理の内容が違う、というのは望ましくない

◆2行以上改行しない

◆変数名、メソッド名でmoveよりもactionのほうが望ましい(moveだと移動、というようになってしまう）
	→下記を活用すること（https://codic.jp/engine）

◆リストを作る処理はあまりやらないこと、重たい

★パフォーマンスを意識した実装をすること

◆enum.ordinalは使わないほうがいい、どうしても使いたい場合はenumの(1)...のようにして紐づけられるようにする

◆ArrayListのコピーは、new ...()に格納するのみでよい

◆同じ情報を持った複数の配列で管理するというのはあまりしないほうがいい

◆比較する処理は変数を左に、定数を右にする

◆正常系を一番上にする。流れに違和感があるのであれば関数でtrue falseを返すよう

◆持たなくてよいプロパティは持たなくてよい

◆インターフェースを使ってみよう

◆Listに対して何かするときにはStream

◆コメントの書き方

◆ゲッター、セッターで特殊処理があるならばコメントに



─────────────────

初級PG認定試験対策

SQL関係のやつ
docker desktopを起動する

Containersに使用するものが表示されていない場合
	powershellを起動する
	docker-compose.ymlが格納されているフォルダパスへ移動する
	下記のコマンドを実行する
		docker-compose up -d
	→Containerに追加される。startする。

A5SQL Mk-2を実行する
	右下の起動 をクリックする
	開いた画面にて 右側の データベース を右クリックし、データベースの追加と削除 をクリックする
	開いたウィンドウで左下の追加をクリックする
	.env を参考にし、ホスト名、ポート番号、ユーザーID、パスワード、データベースを入力する。
	データベース のコンボボックスに対象のものが表示されていなくても直接入力すれば操作可能。

VisualStudio側
	少なくとも練習問題では、VisualStudio Codeで開くパスが間違っていると
	練習問題のものを使用してアクセスできないことを確認した。
	シーケンス図の通りにやっていてもアクセスできないときにはここを疑うこと。






































